DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/home/userdisk/anaconda3/envs/env3119/lib/python3.11/site-packages/certifi/cacert.pem'
DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/home/userdisk/anaconda3/envs/env3119/lib/python3.11/site-packages/certifi/cacert.pem'
DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/home/userdisk/anaconda3/envs/env3119/lib/python3.11/site-packages/certifi/cacert.pem'
DEBUG:faiss.loader:Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
INFO:faiss.loader:Loading faiss.
INFO:faiss.loader:Successfully loaded faiss.
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7926e51af880>, 'json_data': {'input': [[4898, 16248, 36497, 7952, 1532, 90297, 26503, 61379, 20879, 13999, 2297, 97334, 7820, 21022, 68506, 2233, 29256, 9239, 1830, 6856, 16742, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
DEBUG:openai._base_client:Sending HTTP Request: POST https://api.openai.com/v1/embeddings
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7926d3961310>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7926e51716d0> server_hostname='api.openai.com' timeout=None
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7926e831a6d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 05 May 2024 10:13:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-bhhpkljghgphbxb5smaqyp1q'), (b'openai-processing-ms', b'25'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999977'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'1ms'), (b'x-request-id', b'req_20e88c49f80f36fb21c81f6a8082f88e'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=YUNxCHXz5nNjCK6S8qcKwasGP20qrwPsp.VitaATvoo-1714904014-1.0.1.1-VfeRDevdbnPUFShzBtkAQo3Rbt5HO5kZ4HaPNuzHO_G9tK7Q8q4reubdcCctY8MnpO7Me_rXrF0.EUC2xsOzuw; path=/; expires=Sun, 05-May-24 10:43:34 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=rJjZiEpCPgaZVt0FdNFmjqBG6sgBlczvNFw2ROjDMFU-1714904014711-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87eff56aa8f5993f-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers([('date', 'Sun, 05 May 2024 10:13:34 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'user-bhhpkljghgphbxb5smaqyp1q'), ('openai-processing-ms', '25'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=15724800; includeSubDomains'), ('x-ratelimit-limit-requests', '3000'), ('x-ratelimit-limit-tokens', '1000000'), ('x-ratelimit-remaining-requests', '2999'), ('x-ratelimit-remaining-tokens', '999977'), ('x-ratelimit-reset-requests', '20ms'), ('x-ratelimit-reset-tokens', '1ms'), ('x-request-id', 'req_20e88c49f80f36fb21c81f6a8082f88e'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=YUNxCHXz5nNjCK6S8qcKwasGP20qrwPsp.VitaATvoo-1714904014-1.0.1.1-VfeRDevdbnPUFShzBtkAQo3Rbt5HO5kZ4HaPNuzHO_G9tK7Q8q4reubdcCctY8MnpO7Me_rXrF0.EUC2xsOzuw; path=/; expires=Sun, 05-May-24 10:43:34 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('set-cookie', '_cfuvid=rJjZiEpCPgaZVt0FdNFmjqBG6sgBlczvNFw2ROjDMFU-1714904014711-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '87eff56aa8f5993f-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG:openai._base_client:request_id: req_20e88c49f80f36fb21c81f6a8082f88e
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Ты-консультант по ПРАВИЛАМ СТРАХОВАНИЯ.\nОтветь на вопрос клиента на основе переданного тебе документа с соответствующими правилами. \nНе придумывай ничего от себя, отвечай максимально по документу. \nНе упоминай Документ с информацией для ответа клиенту. \nКлиент ничего не должен знать про Документ с информацией для ответа клиенту\n'}, {'role': 'user', 'content': 'Ответь на вопрос клиента. Не упоминай документ с информацией для                                           ответа клиенту в ответе. Документ с информацией для ответа клиенту:                                          дельтапланы, ракеты космического назначения, космические аппараты, двигатели, агрегаты, оборудование, приборы и другие комплектующие изделия (КИ), конструкторская и техническая документация к ним, а также услуги по производству проектной, расчетной, конструкторской, эксплуатационной и иной документации, работы по изготовлению, поставке, ремонту, доработке, продлению ресурсов и сроков службы, обслуживанию авиационной техники. \n1.2.2. Аэропорт - комплекс сооружений, включающий в себя аэродром, аэровокзал, другие сооружения, предназначенный для приема и отправки воздушных судов, обслуживания воздушных перевозок и имеющий для этих целей необходимые оборудование, авиационный персонал и других работников. \n1.2.3. Аэропортовая деятельность – деятельность, осуществляемая юридическими лицами, по обеспечению взлета, посадки, руления, стоянки воздушных судов, их техническому обслуживанию и обеспечению горюче-смазочными материалами и специальными жидкостями, коммерческому обслуживанию пассажиров, багажа, почты и грузов;\nможет быть аэропортовая деятельность, а также Производственная деятельность, деятельность, связанная с разработкой, производством и реализацией авиационных товаров и услуг. \n1.2.8. Изготовитель - организация или дееспособные физические лица, зарегистрированные в качестве индивидуальных предпринимателей, производящие авиационную и космическую технику, имеющие сертифицированное (лицензированное) производство с одобренной системой качества продукции и сертификатом типа продукции, выданными им соответствующими уполномоченными на то органами государственного регулирования, осуществляющие авторский контроль и несущие имущественную ответственность за свою продукцию и услуги по закону, а также реализующие произведенную технику. \n1.2.9. Лицо, риск ответственности которого застрахован (Застрахованное лицо, Дополнительный страхователь) – лицо, на которое может быть возложена по Закону ответственность по возмещению вреда, причиненного при осуществлении застрахованной деятельности, риск ответственности которого за\nвнеаэропортовых пунктов регистрации (применительно к данной оговорке, считается, что пункт продажи билетов не является магазином). \n15. Рекламная деятельность. \n16. Промоутерская деятельность и/или спонсорство, за исключением непосредственно связанных с эксплуатацией воздушных судов или деятельности в пределах здания аэропорта. Любое изменение данного списка исключений должно быть четко прописано в договоре страхования и согласовано со Страховщиком. AVS104B \n\n\nОГОВОРКА ОБ ИСКЛЮЧЕНИИ ОТВЕТСТВЕННОСТИ ЗА СОБЫТИЯ, СВЯЗАННЫЕ С ИНФОРМАЦИОННЫМИ РИСКАМИ LIIBA AVIATION 001 Настоящий договор не покрывает следующие убытки в связи со следующим: (1) любая форма психической травмы, душевных страданий, шока или испуга, если только они не являются результатом телесного повреждения, вызванного: \nа) задержкой, отменой или непредоставлением воздушной перевозки и связанных с ней услуг; \nб) несанкционированным доступом и / или использованием конфиденциальной, частной или личной информации лица или организации; (2) имущественный\n\ufeffПРАВИЛА СТРАХОВАНИЯ ОТВЕТСТВЕННОСТИ АЭРОПОРТОВ И АВИАЦИОННЫХ ТОВАРОПРОИЗВОДИТЕЛЕЙ \n\n\n ОБЩИЕ ПОЛОЖЕНИЯ \n1.1. В соответствии с законодательством Российской Федерации и на основании настоящих Правил страховая организация АО «АльфаСтрахование» (далее по тексту – Страховщик) заключает договоры страхования гражданской ответственности перед третьими лицами владельцев и эксплуатантов аэропортов, поставщиков авиационных товаров и услуг, а также органов управления воздушным движением (далее по тексту - Страхователи). \n1.2. Основные понятия, конкретизированные определениями, изложенными ниже, трактуются в рамках настоящих Правил только согласно данным определениям: \n1.2.1. Авиационные товары и услуги - изделия авиационно-космической техники: самолеты, вертолеты, летательные аппараты специального назначения, планеры, автожиры, дельтапланы, ракеты космического назначения, космические аппараты, двигатели, агрегаты, оборудование, приборы и другие комплектующие изделия (КИ), конструкторская и техническая документация к ним,\n\nВопрос клиента: \nкакая деятельность относится к аэропортовой?'}], 'model': 'gpt-3.5-turbo-0125', 'temperature': 0}}
DEBUG:openai._base_client:Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7926d3959f90>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7926e5171130> server_hostname='api.openai.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7926d3959290>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 05 May 2024 10:13:37 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'user-bhhpkljghgphbxb5smaqyp1q'), (b'openai-processing-ms', b'2092'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'60000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'57841'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'2.159s'), (b'x-request-id', b'req_b1995b6ede072dc5918dd21f5ed42921'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=8H2EBS3jrNHg8EJ1t5CT_qAi1Q1KMaVEtnBobKm4bUE-1714904017-1.0.1.1-n.sjytWmpY9Zp_LYN2bublO822lgxkcu2f8aK__vw6JbJ_ZHOYHkrc3A_Yxjjzv.0432mjMFXPzzFUN92wQ4Qw; path=/; expires=Sun, 05-May-24 10:43:37 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=jbwmhJLi6LO.fqE3Lf_jaeOtPdG92TH0H59ZKwTZeHs-1714904017610-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87eff56da9084daf-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 05 May 2024 10:13:37 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('cache-control', 'no-cache, must-revalidate'), ('openai-model', 'gpt-3.5-turbo-0125'), ('openai-organization', 'user-bhhpkljghgphbxb5smaqyp1q'), ('openai-processing-ms', '2092'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=15724800; includeSubDomains'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '60000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '57841'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '2.159s'), ('x-request-id', 'req_b1995b6ede072dc5918dd21f5ed42921'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=8H2EBS3jrNHg8EJ1t5CT_qAi1Q1KMaVEtnBobKm4bUE-1714904017-1.0.1.1-n.sjytWmpY9Zp_LYN2bublO822lgxkcu2f8aK__vw6JbJ_ZHOYHkrc3A_Yxjjzv.0432mjMFXPzzFUN92wQ4Qw; path=/; expires=Sun, 05-May-24 10:43:37 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('set-cookie', '_cfuvid=jbwmhJLi6LO.fqE3Lf_jaeOtPdG92TH0H59ZKwTZeHs-1714904017610-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '87eff56da9084daf-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG:openai._base_client:request_id: req_b1995b6ede072dc5918dd21f5ed42921
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7926e51af7e0>, 'json_data': {'input': [[4898, 16248, 7740, 2297, 6148, 13810, 14009, 50819, 18868, 22911, 10693, 6856, 36497, 12561, 10298, 40231, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
DEBUG:openai._base_client:Sending HTTP Request: POST https://api.openai.com/v1/embeddings
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7926d3915e10>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7926e51716d0> server_hostname='api.openai.com' timeout=None
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7926d3915ed0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 05 May 2024 10:20:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-bhhpkljghgphbxb5smaqyp1q'), (b'openai-processing-ms', b'22'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999982'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'1ms'), (b'x-request-id', b'req_6491fe5155fc349c9e17c8fa11299bd3'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87efff7e58ba91f5-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Sun, 05 May 2024 10:20:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'user-bhhpkljghgphbxb5smaqyp1q', 'openai-processing-ms': '22', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15724800; includeSubDomains', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999982', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '1ms', 'x-request-id': 'req_6491fe5155fc349c9e17c8fa11299bd3', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '87efff7e58ba91f5-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG:openai._base_client:request_id: req_6491fe5155fc349c9e17c8fa11299bd3
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Ты-консультант по ПРАВИЛАМ СТРАХОВАНИЯ.\nОтветь на вопрос клиента на основе переданного тебе документа с соответствующими правилами. \nНе придумывай ничего от себя, отвечай максимально по документу. \nНе упоминай Документ с информацией для ответа клиенту. \nКлиент ничего не должен знать про Документ с информацией для ответа клиенту\n'}, {'role': 'user', 'content': 'Ответь на вопрос клиента. Не упоминай документ с информацией для                                           ответа клиенту в ответе. Документ с информацией для ответа клиенту:                                          страховая премия исчисляется в соответствии со следующей Таблицей, если договором страхования не предусмотрено иное: Срок действия договора в месяцах 1 2 3 4 5 6 7 8 9 10 11 Процент от общего годового размера страховой премии 20 30 40 50 60 70 75 80 85 90 95 \n10.8. Договор страхования, если в нем не предусмотрено иное, вступает в силу с начала периода страхования указанного в договоре страхования, но не ранее 00 часов дня, следующего за днем уплаты страховой премии или первого ее взноса. Днем уплаты страховой премии, может считаться дата поступления страховой премии на расчетный счет Страховщика или дата внесения страховой премии в кассу Страховщика или дата исполненного платежного поручения на осуществление платежа с отметкой банка об исполнении и датой исполнения. \n10.9. В случае если договор страхования заключается на срок более одного года, Страховщик имеет право по истечение каждого годового периода срока действия договора пересмотреть страховую премию на следующий годовой период, о чем должен письменно\nФОРМА И ПОРЯДОК ЕЕ ОПЛАТЫ. \n9.1. Страховая премия является платой за страхование, которую Страхователь обязан оплатить Страховщику в порядке и в сроки, которые установлены договором страхования. \n9.2. Страховщик при определении размера страховой премии, подлежащей уплате по договору страхования, вправе применять разработанные им базовые страховые тарифы, определяющие страховую премию с учетом застрахованных рисков, лимитов ответственности, условий страхования, срока действия договора страхования. \n9.3. Страховщик при определении размера страховой премии вправе применять повышающие или понижающие коэффициенты к базовым страховым тарифам в зависимости от факторов страхового риска. \n9.4. Страховая премия может быть установлена в российских рублях либо в валютном эквиваленте. В последнем случае страховая премия (страховые взносы), в целях их расчета, указываются в эквиваленте иностранной валюты. Оплата страховой премии, страховых взносов производится в рублях по курсу ЦБ РФ на день оплаты, если иной курс или иная\nстраховой премии (первого страхового взноса), очередного страхового взноса: \n9.7.1. При неуплате/неполной уплате страховой премии (первого страхового взноса), в случае если договор страхования вступает в силу после оплаты страховой премии (первого страхового взноса), договор страхования считается не вступившим в силу. При оплате страховой премии (первого страхового взноса) в сумме меньшей, чем предусмотрено договором, Страховщик возвращает полученную сумму Страхователю в течение 5 (пяти) рабочих дней с даты поступления средств на счет Страховщика. 9.7.2. Неуплата страховой премии (в случае, если премия подлежит уплате единовременным платежом после вступления в силу договора страхования), первого (в случае, если договор страхования вступает в силу до его оплаты) или очередного страхового взноса или их неполная уплата Страхователем (Выгодоприобретателем) в период действия договора в порядке и в срок, установленный договором страхования \n является для сторон договора страхования выражением воли Страхователя\nвлекущие увеличение страхового риска, уже отпали. \n12. ПОРЯДОК ОПРЕДЕЛЕНИЯ РАЗМЕРА УБЫТКОВ И ВЫПЛАТЫ СТРАХОВОГО ВОЗМЕЩЕНИЯ \n12.1. Выплата страхового возмещения осуществляется Страховщиком на основании Заявления о страховой выплате Страхователя (Выгодоприобретателя) в письменной форме с приложением подтверждающих документов и страхового акта, составленного Страховщиком. \n12.2. К Заявлению о страховой выплате прилагаются документы (оригиналы или заверенные копии), подтверждающие факт, причины и размер убытка, требования о возмещении вреда, предъявленные потерпевшими лицами к Страхователю, решения судебных органов о возмещении причиненного вреда (если дело рассматривалось в судебном порядке). Непредставление таких документов дает право отказать в выплате возмещения в части убытка, не подтвержденного документами. \n12.2.1. В случае причинения вреда жизни и здоровью физического лица: - документы, удостоверяющие личность; - объяснительные записки очевидцев/участников происшествия; - письменное заявление\n\nВопрос клиента: \nкак исчисляется страховая премия?'}], 'model': 'gpt-3.5-turbo-0125', 'temperature': 0}}
DEBUG:openai._base_client:Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7926d392be10>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7926e5171130> server_hostname='api.openai.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7926d392be50>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 05 May 2024 10:20:30 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'user-bhhpkljghgphbxb5smaqyp1q'), (b'openai-processing-ms', b'2286'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'60000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'57868'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'2.132s'), (b'x-request-id', b'req_3c4271ec24095e21dd3fde9fcf848c7b'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87efff821b7d1cc7-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 05 May 2024 10:20:30 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'cache-control': 'no-cache, must-revalidate', 'openai-model': 'gpt-3.5-turbo-0125', 'openai-organization': 'user-bhhpkljghgphbxb5smaqyp1q', 'openai-processing-ms': '2286', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15724800; includeSubDomains', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '60000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '57868', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '2.132s', 'x-request-id': 'req_3c4271ec24095e21dd3fde9fcf848c7b', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '87efff821b7d1cc7-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG:openai._base_client:request_id: req_3c4271ec24095e21dd3fde9fcf848c7b
DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/home/userdisk/anaconda3/envs/env3119/lib/python3.11/site-packages/certifi/cacert.pem'
DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/home/userdisk/anaconda3/envs/env3119/lib/python3.11/site-packages/certifi/cacert.pem'
DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/home/userdisk/anaconda3/envs/env3119/lib/python3.11/site-packages/certifi/cacert.pem'
DEBUG:faiss.loader:Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
INFO:faiss.loader:Loading faiss.
INFO:faiss.loader:Successfully loaded faiss.
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7cf2fd5e5ee0>, 'json_data': {'input': [[4898, 16248, 36497, 7952, 1532, 90297, 26503, 61379, 20879, 13999, 2297, 97334, 7820, 21022, 68506, 2233, 29256, 9239, 1830, 6856, 16742, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
DEBUG:openai._base_client:Sending HTTP Request: POST https://api.openai.com/v1/embeddings
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7cf2f2696c10>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7cf2fd5a9880> server_hostname='api.openai.com' timeout=None
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7cf2f2696cd0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 05 May 2024 14:22:43 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-bhhpkljghgphbxb5smaqyp1q'), (b'openai-processing-ms', b'18'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999977'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'1ms'), (b'x-request-id', b'req_aac018f1b2e732462fbec0a09e0de6de'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=hMTq1EMBEj19gw5O79KGyzhbZcWEGa.E6q4fc1bD8Zo-1714918963-1.0.1.1-x9SMgAm_AuVK8I9GIWTvUrbYPGZhgsyq_VWBpdQB.8Nx9mkZv6cFPnUTaaV51Z9vNs1_9EvAkXzQbHu7tcjXbw; path=/; expires=Sun, 05-May-24 14:52:43 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=6vl.z_rlkUDE4k3y4r6.tbGYoJFRW6iRi9pq_21RJa0-1714918963366-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87f162600c8318c1-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers([('date', 'Sun, 05 May 2024 14:22:43 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'user-bhhpkljghgphbxb5smaqyp1q'), ('openai-processing-ms', '18'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=15724800; includeSubDomains'), ('x-ratelimit-limit-requests', '3000'), ('x-ratelimit-limit-tokens', '1000000'), ('x-ratelimit-remaining-requests', '2999'), ('x-ratelimit-remaining-tokens', '999977'), ('x-ratelimit-reset-requests', '20ms'), ('x-ratelimit-reset-tokens', '1ms'), ('x-request-id', 'req_aac018f1b2e732462fbec0a09e0de6de'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=hMTq1EMBEj19gw5O79KGyzhbZcWEGa.E6q4fc1bD8Zo-1714918963-1.0.1.1-x9SMgAm_AuVK8I9GIWTvUrbYPGZhgsyq_VWBpdQB.8Nx9mkZv6cFPnUTaaV51Z9vNs1_9EvAkXzQbHu7tcjXbw; path=/; expires=Sun, 05-May-24 14:52:43 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('set-cookie', '_cfuvid=6vl.z_rlkUDE4k3y4r6.tbGYoJFRW6iRi9pq_21RJa0-1714918963366-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '87f162600c8318c1-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG:openai._base_client:request_id: req_aac018f1b2e732462fbec0a09e0de6de
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Ты-консультант по ПРАВИЛАМ СТРАХОВАНИЯ.\nОтветь на вопрос клиента на основе переданного тебе документа с соответствующими правилами. \nНе придумывай ничего от себя, отвечай максимально по документу. \nНе упоминай Документ с информацией для ответа клиенту. \nКлиент ничего не должен знать про Документ с информацией для ответа клиенту\n'}, {'role': 'user', 'content': 'Ответь на вопрос клиента. Не упоминай документ с информацией для                                           ответа клиенту в ответе. Документ с информацией для ответа клиенту:                                          дельтапланы, ракеты космического назначения, космические аппараты, двигатели, агрегаты, оборудование, приборы и другие комплектующие изделия (КИ), конструкторская и техническая документация к ним, а также услуги по производству проектной, расчетной, конструкторской, эксплуатационной и иной документации, работы по изготовлению, поставке, ремонту, доработке, продлению ресурсов и сроков службы, обслуживанию авиационной техники. \n1.2.2. Аэропорт - комплекс сооружений, включающий в себя аэродром, аэровокзал, другие сооружения, предназначенный для приема и отправки воздушных судов, обслуживания воздушных перевозок и имеющий для этих целей необходимые оборудование, авиационный персонал и других работников. \n1.2.3. Аэропортовая деятельность – деятельность, осуществляемая юридическими лицами, по обеспечению взлета, посадки, руления, стоянки воздушных судов, их техническому обслуживанию и обеспечению горюче-смазочными материалами и специальными жидкостями, коммерческому обслуживанию пассажиров, багажа, почты и грузов;\nможет быть аэропортовая деятельность, а также Производственная деятельность, деятельность, связанная с разработкой, производством и реализацией авиационных товаров и услуг. \n1.2.8. Изготовитель - организация или дееспособные физические лица, зарегистрированные в качестве индивидуальных предпринимателей, производящие авиационную и космическую технику, имеющие сертифицированное (лицензированное) производство с одобренной системой качества продукции и сертификатом типа продукции, выданными им соответствующими уполномоченными на то органами государственного регулирования, осуществляющие авторский контроль и несущие имущественную ответственность за свою продукцию и услуги по закону, а также реализующие произведенную технику. \n1.2.9. Лицо, риск ответственности которого застрахован (Застрахованное лицо, Дополнительный страхователь) – лицо, на которое может быть возложена по Закону ответственность по возмещению вреда, причиненного при осуществлении застрахованной деятельности, риск ответственности которого за\nвнеаэропортовых пунктов регистрации (применительно к данной оговорке, считается, что пункт продажи билетов не является магазином). \n15. Рекламная деятельность. \n16. Промоутерская деятельность и/или спонсорство, за исключением непосредственно связанных с эксплуатацией воздушных судов или деятельности в пределах здания аэропорта. Любое изменение данного списка исключений должно быть четко прописано в договоре страхования и согласовано со Страховщиком. AVS104B \n\n\nОГОВОРКА ОБ ИСКЛЮЧЕНИИ ОТВЕТСТВЕННОСТИ ЗА СОБЫТИЯ, СВЯЗАННЫЕ С ИНФОРМАЦИОННЫМИ РИСКАМИ LIIBA AVIATION 001 Настоящий договор не покрывает следующие убытки в связи со следующим: (1) любая форма психической травмы, душевных страданий, шока или испуга, если только они не являются результатом телесного повреждения, вызванного: \nа) задержкой, отменой или непредоставлением воздушной перевозки и связанных с ней услуг; \nб) несанкционированным доступом и / или использованием конфиденциальной, частной или личной информации лица или организации; (2) имущественный\n\ufeffПРАВИЛА СТРАХОВАНИЯ ОТВЕТСТВЕННОСТИ АЭРОПОРТОВ И АВИАЦИОННЫХ ТОВАРОПРОИЗВОДИТЕЛЕЙ \n\n\n ОБЩИЕ ПОЛОЖЕНИЯ \n1.1. В соответствии с законодательством Российской Федерации и на основании настоящих Правил страховая организация АО «АльфаСтрахование» (далее по тексту – Страховщик) заключает договоры страхования гражданской ответственности перед третьими лицами владельцев и эксплуатантов аэропортов, поставщиков авиационных товаров и услуг, а также органов управления воздушным движением (далее по тексту - Страхователи). \n1.2. Основные понятия, конкретизированные определениями, изложенными ниже, трактуются в рамках настоящих Правил только согласно данным определениям: \n1.2.1. Авиационные товары и услуги - изделия авиационно-космической техники: самолеты, вертолеты, летательные аппараты специального назначения, планеры, автожиры, дельтапланы, ракеты космического назначения, космические аппараты, двигатели, агрегаты, оборудование, приборы и другие комплектующие изделия (КИ), конструкторская и техническая документация к ним,\n\nВопрос клиента: \nкакая деятельность относится к аэропортовой?'}], 'model': 'gpt-3.5-turbo-0125', 'temperature': 0}}
DEBUG:openai._base_client:Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7cf2eb8b30d0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7cf2fd5a91c0> server_hostname='api.openai.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7cf2f2696d10>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 05 May 2024 14:22:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'user-bhhpkljghgphbxb5smaqyp1q'), (b'openai-processing-ms', b'3036'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'60000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'57841'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'2.159s'), (b'x-request-id', b'req_f184697fd49d606e252c712979d64dcd'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=H7tTjlAQIGgO.VMNuG_X.ZVnCnq.MCA3nCj7e1V4kIw-1714918967-1.0.1.1-aPfo2uOxdnz_yWqGL.kXCDevaofvAEk2GsrQH..jO8Y107V1o5QSetaDAqoqa_RUrF0iokTGj1OLDyt06xxNMQ; path=/; expires=Sun, 05-May-24 14:52:47 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=v_kA.VV2tWZKrUHPdAopGC_uh.mOIox9d.QuH0vGyC0-1714918967739-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87f16266395239c8-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 05 May 2024 14:22:47 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('cache-control', 'no-cache, must-revalidate'), ('openai-model', 'gpt-3.5-turbo-0125'), ('openai-organization', 'user-bhhpkljghgphbxb5smaqyp1q'), ('openai-processing-ms', '3036'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=15724800; includeSubDomains'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '60000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '57841'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '2.159s'), ('x-request-id', 'req_f184697fd49d606e252c712979d64dcd'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=H7tTjlAQIGgO.VMNuG_X.ZVnCnq.MCA3nCj7e1V4kIw-1714918967-1.0.1.1-aPfo2uOxdnz_yWqGL.kXCDevaofvAEk2GsrQH..jO8Y107V1o5QSetaDAqoqa_RUrF0iokTGj1OLDyt06xxNMQ; path=/; expires=Sun, 05-May-24 14:52:47 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('set-cookie', '_cfuvid=v_kA.VV2tWZKrUHPdAopGC_uh.mOIox9d.QuH0vGyC0-1714918967739-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '87f16266395239c8-FRA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG:openai._base_client:request_id: req_f184697fd49d606e252c712979d64dcd
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7cf2f284dd00>, 'json_data': {'input': [[4898, 16248, 7740, 2297, 6148, 13810, 14009, 50819, 18868, 22911, 10693, 6856, 36497, 12561, 10298, 40231, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
DEBUG:openai._base_client:Sending HTTP Request: POST https://api.openai.com/v1/embeddings
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7cf2eb279cd0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7cf2fd5a9880> server_hostname='api.openai.com' timeout=None
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7cf3000c20d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 05 May 2024 14:23:05 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-bhhpkljghgphbxb5smaqyp1q'), (b'openai-processing-ms', b'24'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999982'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'1ms'), (b'x-request-id', b'req_caa0dff2cdfea47530d94684e4b40b5a'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87f162e6ec139bf5-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Sun, 05 May 2024 14:23:05 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'user-bhhpkljghgphbxb5smaqyp1q', 'openai-processing-ms': '24', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15724800; includeSubDomains', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999982', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '1ms', 'x-request-id': 'req_caa0dff2cdfea47530d94684e4b40b5a', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '87f162e6ec139bf5-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG:openai._base_client:request_id: req_caa0dff2cdfea47530d94684e4b40b5a
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Ты-консультант по ПРАВИЛАМ СТРАХОВАНИЯ.\nОтветь на вопрос клиента на основе переданного тебе документа с соответствующими правилами. \nНе придумывай ничего от себя, отвечай максимально по документу. \nНе упоминай Документ с информацией для ответа клиенту. \nКлиент ничего не должен знать про Документ с информацией для ответа клиенту\n'}, {'role': 'user', 'content': 'Ответь на вопрос клиента. Не упоминай документ с информацией для                                           ответа клиенту в ответе. Документ с информацией для ответа клиенту:                                          страховая премия исчисляется в соответствии со следующей Таблицей, если договором страхования не предусмотрено иное: Срок действия договора в месяцах 1 2 3 4 5 6 7 8 9 10 11 Процент от общего годового размера страховой премии 20 30 40 50 60 70 75 80 85 90 95 \n10.8. Договор страхования, если в нем не предусмотрено иное, вступает в силу с начала периода страхования указанного в договоре страхования, но не ранее 00 часов дня, следующего за днем уплаты страховой премии или первого ее взноса. Днем уплаты страховой премии, может считаться дата поступления страховой премии на расчетный счет Страховщика или дата внесения страховой премии в кассу Страховщика или дата исполненного платежного поручения на осуществление платежа с отметкой банка об исполнении и датой исполнения. \n10.9. В случае если договор страхования заключается на срок более одного года, Страховщик имеет право по истечение каждого годового периода срока действия договора пересмотреть страховую премию на следующий годовой период, о чем должен письменно\nФОРМА И ПОРЯДОК ЕЕ ОПЛАТЫ. \n9.1. Страховая премия является платой за страхование, которую Страхователь обязан оплатить Страховщику в порядке и в сроки, которые установлены договором страхования. \n9.2. Страховщик при определении размера страховой премии, подлежащей уплате по договору страхования, вправе применять разработанные им базовые страховые тарифы, определяющие страховую премию с учетом застрахованных рисков, лимитов ответственности, условий страхования, срока действия договора страхования. \n9.3. Страховщик при определении размера страховой премии вправе применять повышающие или понижающие коэффициенты к базовым страховым тарифам в зависимости от факторов страхового риска. \n9.4. Страховая премия может быть установлена в российских рублях либо в валютном эквиваленте. В последнем случае страховая премия (страховые взносы), в целях их расчета, указываются в эквиваленте иностранной валюты. Оплата страховой премии, страховых взносов производится в рублях по курсу ЦБ РФ на день оплаты, если иной курс или иная\nстраховой премии (первого страхового взноса), очередного страхового взноса: \n9.7.1. При неуплате/неполной уплате страховой премии (первого страхового взноса), в случае если договор страхования вступает в силу после оплаты страховой премии (первого страхового взноса), договор страхования считается не вступившим в силу. При оплате страховой премии (первого страхового взноса) в сумме меньшей, чем предусмотрено договором, Страховщик возвращает полученную сумму Страхователю в течение 5 (пяти) рабочих дней с даты поступления средств на счет Страховщика. 9.7.2. Неуплата страховой премии (в случае, если премия подлежит уплате единовременным платежом после вступления в силу договора страхования), первого (в случае, если договор страхования вступает в силу до его оплаты) или очередного страхового взноса или их неполная уплата Страхователем (Выгодоприобретателем) в период действия договора в порядке и в срок, установленный договором страхования \n является для сторон договора страхования выражением воли Страхователя\nвлекущие увеличение страхового риска, уже отпали. \n12. ПОРЯДОК ОПРЕДЕЛЕНИЯ РАЗМЕРА УБЫТКОВ И ВЫПЛАТЫ СТРАХОВОГО ВОЗМЕЩЕНИЯ \n12.1. Выплата страхового возмещения осуществляется Страховщиком на основании Заявления о страховой выплате Страхователя (Выгодоприобретателя) в письменной форме с приложением подтверждающих документов и страхового акта, составленного Страховщиком. \n12.2. К Заявлению о страховой выплате прилагаются документы (оригиналы или заверенные копии), подтверждающие факт, причины и размер убытка, требования о возмещении вреда, предъявленные потерпевшими лицами к Страхователю, решения судебных органов о возмещении причиненного вреда (если дело рассматривалось в судебном порядке). Непредставление таких документов дает право отказать в выплате возмещения в части убытка, не подтвержденного документами. \n12.2.1. В случае причинения вреда жизни и здоровью физического лица: - документы, удостоверяющие личность; - объяснительные записки очевидцев/участников происшествия; - письменное заявление\n\nВопрос клиента: \nкак исчисляется страховая премия?'}], 'model': 'gpt-3.5-turbo-0125', 'temperature': 0}}
DEBUG:openai._base_client:Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7cf2eb2610d0>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7cf2fd5a91c0> server_hostname='api.openai.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7cf2eb261110>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 05 May 2024 14:23:08 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'Cache-Control', b'no-cache, must-revalidate'), (b'openai-model', b'gpt-3.5-turbo-0125'), (b'openai-organization', b'user-bhhpkljghgphbxb5smaqyp1q'), (b'openai-processing-ms', b'2359'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'60000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'57868'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'2.132s'), (b'x-request-id', b'req_172a91cdf13ab7d110f639fc6c04d561'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'87f162eaffa818e0-FRA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 05 May 2024 14:23:08 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'cache-control': 'no-cache, must-revalidate', 'openai-model': 'gpt-3.5-turbo-0125', 'openai-organization': 'user-bhhpkljghgphbxb5smaqyp1q', 'openai-processing-ms': '2359', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15724800; includeSubDomains', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '60000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '57868', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '2.132s', 'x-request-id': 'req_172a91cdf13ab7d110f639fc6c04d561', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '87f162eaffa818e0-FRA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG:openai._base_client:request_id: req_172a91cdf13ab7d110f639fc6c04d561
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
