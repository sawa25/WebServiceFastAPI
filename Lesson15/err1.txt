INFO:numexpr.utils:NumExpr defaulting to 1 threads.
INFO:numexpr.utils:NumExpr defaulting to 1 threads.
INFO:numexpr.utils:NumExpr defaulting to 1 threads.
DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/home/userdisk/anaconda3/envs/env3119/lib/python3.11/site-packages/certifi/cacert.pem'
DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/home/userdisk/anaconda3/envs/env3119/lib/python3.11/site-packages/certifi/cacert.pem'
DEBUG:httpx:load_ssl_context verify=True cert=None trust_env=True http2=False
DEBUG:httpx:load_verify_locations cafile='/home/userdisk/anaconda3/envs/env3119/lib/python3.11/site-packages/certifi/cacert.pem'
DEBUG:faiss.loader:Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU
INFO:faiss.loader:Loading faiss.
INFO:faiss.loader:Successfully loaded faiss.
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7343a8058860>, 'json_data': {'input': [[8164, 2233, 28089, 8341]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
DEBUG:openai._base_client:Sending HTTP Request: POST https://api.openai.com/v1/embeddings
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7343b2921690>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7343b2975be0> server_hostname='api.openai.com' timeout=None
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7343a3f3f690>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 14 May 2024 16:50:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-bhhpkljghgphbxb5smaqyp1q'), (b'openai-processing-ms', b'21'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999996'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_3c116b242082bc4af3a68abd9427915d'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=_H2n4kiYYY5N4AkiuQnVybampFupf5R5pP1US7kABWY-1715705446-1.0.1.1-eOTeU7r3Y4jYYEj5OMeFy4sSVW7v.m_Zm1F5zM_j9eNB.aXC3LooIkptwqnH1e4nEBB6utIWN8EvpXOmmPP0dQ; path=/; expires=Tue, 14-May-24 17:20:46 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=qNBfJtrLvMorQai0VILncTjsBZtsDpvLqo_DWSAemq4-1715705446215-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'883c639dca081afd-AMS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers([('date', 'Tue, 14 May 2024 16:50:46 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'user-bhhpkljghgphbxb5smaqyp1q'), ('openai-processing-ms', '21'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=15724800; includeSubDomains'), ('x-ratelimit-limit-requests', '3000'), ('x-ratelimit-limit-tokens', '1000000'), ('x-ratelimit-remaining-requests', '2999'), ('x-ratelimit-remaining-tokens', '999996'), ('x-ratelimit-reset-requests', '20ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_3c116b242082bc4af3a68abd9427915d'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=_H2n4kiYYY5N4AkiuQnVybampFupf5R5pP1US7kABWY-1715705446-1.0.1.1-eOTeU7r3Y4jYYEj5OMeFy4sSVW7v.m_Zm1F5zM_j9eNB.aXC3LooIkptwqnH1e4nEBB6utIWN8EvpXOmmPP0dQ; path=/; expires=Tue, 14-May-24 17:20:46 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('set-cookie', '_cfuvid=qNBfJtrLvMorQai0VILncTjsBZtsDpvLqo_DWSAemq4-1715705446215-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '883c639dca081afd-AMS'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG:openai._base_client:request_id: req_3c116b242082bc4af3a68abd9427915d
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Ты-консультант по ПРАВИЛАМ СТРАХОВАНИЯ.\nОтветь на вопрос клиента на основе переданного тебе документа с соответствующими правилами. \nНе придумывай ничего от себя, отвечай максимально по документу. \nНе упоминай Документ с информацией для ответа клиенту. \nКлиент ничего не должен знать про Документ с информацией для ответа клиенту\n'}, {'role': 'user', 'content': 'Ответь на вопрос клиента. Не упоминай документ с информацией для                                           ответа клиенту в ответе. Документ с информацией для ответа клиенту:                                          руления, стоянки воздушных судов, их техническому обслуживанию и обеспечению горюче-смазочными материалами и специальными жидкостями, коммерческому обслуживанию пассажиров, багажа, почты и грузов; \n1.2.4. Воздушное судно (ВС) – пилотируемый летательный аппарат, поддерживаемый в атмосфере за счет взаимодействия с воздухом, отличного от взаимодействия с воздухом, отраженным от поверхности земли или воды. \n1.2.5. Вред жизни и здоровью - означает телесное повреждение или смерть физического лица, происшедшее в результате наступления Происшествия. \n1.2.6. Вред имуществу - означает гибель (утрату), недостачу, порчу или повреждение имущества, происшедшие в результате наступления происшествия. \n1.2.7. Застрахованная деятельность – деятельность, указанная в качестве таковой в договоре страхования. Застрахованной деятельностью может быть аэропортовая деятельность, а также Производственная деятельность, деятельность, связанная с разработкой, производством и реализацией авиационных товаров и услуг. \n1.2.8. Изготовитель -\nили программы, хранящиеся в виде или на основе, созданные или используемые на, или передаваемые в или из компьютерного программного обеспечения, включая системное и прикладное программное обеспечение, жесткие диски или дискеты, компакт - диски, ленты, приводы, ячейки, устройства обработки данных или любые другие носители, которые используются с электронно-управляемым оборудованием. 13 Ничто в настоящем документе не отменяет любое другое положение об исключении, прилагаемое к настоящему договору или являющееся его частью. LIIBA AVIATION 001 \n\n\nОГОВОРКА О ТЕХНИЧЕСКОМ ОБСЛУЖИВАНИИ 1. Не являются страховыми случаями: 1.1. События, произошедшие с воздушным судном с истекшим межремонтным или назначенным ресурсом (сроком службы); 1.2. События, произошедшие с воздушным судном, прямо или косвенно вызванные отказами, поломками узлов и агрегатов воздушного судна, произошедшими: 1.2.1. в связи с несвоевременным проведением ремонтных или регламентных работ, или 1.2.2. в связи с проведением ремонтных или регламентных работ\nили каким-либо другим образом, при этом должно быть направлено уведомление в письменном виде не менее чем за Тридцать (30) дней. Началом действия срока уведомления считается дата подачи такого уведомления Страховщиками. AVN 6A \nПОЛОЖЕНИЕ ОБ ИСКЛЮЧЕНИИ ИЗ ДОГОВОРА СТРАХОВАНИЯ ЯДЕРНЫХ РИСКОВ AVN38B 1. В соответствии с настоящим Положением не являются страховыми случаями гибель или повреждение любого имущества1 и/или гражданская ответственность Страхователя за причинение любого вреда в результате происшествий, вызванных: а) радиоактивными, токсическими, взрывчатыми или другими опасными свойствами любого взрывоопасного ядерного устройства или его ядерных составных частей; б) радиоактивными свойствами, или комбинацией радиоактивных свойств с токсическими, взрывчатыми или другими опасными свойствами, любым другим радиоактивным материалом при перевозке его в качестве груза, включая его хранение и погрузочно-разгрузочные работы; в) ионизирующей радиацией или радиоактивным заражением от любого другого источника\nуже произведена, Страхователь или Выгодоприобретатель обязаны возвратить Страховщику соответствующую этому ущербу сумму. \n15. ИЗМЕНЕНИЕ И ДОПОЛНЕНИЕ ДОГОВОРА СТРАХОВАНИЯ \n15.1. Внесение изменений и дополнений в условия договора страхования возможно по соглашению сторон. \n15.2. О необходимости внесения изменений и дополнений в договор страхования Страхователь обязан в разумные сроки сообщить Страховщику в письменной форме. 15.3. Все изменения и дополнения в договоре страхования оформляются в письменной форме. \n16. ПОРЯДОК РАЗРЕШЕНИЯ СПОРОВ \n16.1. Все иные, не оговоренные настоящими Правилами условия, регулируются действующим законодательством Российской Федерации. Все споры по договору страхования рассматриваются путем переговоров, а при не достижении согласия сторонами - в суде в порядке, установленном законодательством Российской Федерации. \n1 Приложение №1 к Правилам страхования страхования ответственности аэропортов и авиационных товаропроизводителей.\nНастоящим между Сторонами согласовано и Понимается, что\n\nВопрос клиента: \nпривет'}], 'model': 'gpt-3.5-turbo-0125', 'temperature': 0}}
DEBUG:openai._base_client:Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7343a117ff10>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7343b29759a0> server_hostname='api.openai.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7343b5b22b50>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 14 May 2024 16:50:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-organization', b'user-bhhpkljghgphbxb5smaqyp1q'), (b'openai-processing-ms', b'798'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'60000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'57871'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'2.129s'), (b'x-request-id', b'req_3126f4dc12b63a69a5e0bf9dc8c5ab59'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=xhJeqlyzlfvM.lXVailg1iwy8VINSGYr7nmvQwPg1mM-1715705448-1.0.1.1-DzxFUXQiQj1Bg8YLFLj_Jd28LVi4616QXkRS_VO_iYNWLHQTXBuraRdLu2H5mfV0KfuI3JY8ZsVW7n9dFH3LWg; path=/; expires=Tue, 14-May-24 17:20:48 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Set-Cookie', b'_cfuvid=vtZGMQgU7WZPg_mzZfKIHgU5w5ZlwsEqsr9xVfnv6Jc-1715705448302-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'883c63a3fd34656c-AMS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Tue, 14 May 2024 16:50:48 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('openai-organization', 'user-bhhpkljghgphbxb5smaqyp1q'), ('openai-processing-ms', '798'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=15724800; includeSubDomains'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '60000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '57871'), ('x-ratelimit-reset-requests', '8.64s'), ('x-ratelimit-reset-tokens', '2.129s'), ('x-request-id', 'req_3126f4dc12b63a69a5e0bf9dc8c5ab59'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=xhJeqlyzlfvM.lXVailg1iwy8VINSGYr7nmvQwPg1mM-1715705448-1.0.1.1-DzxFUXQiQj1Bg8YLFLj_Jd28LVi4616QXkRS_VO_iYNWLHQTXBuraRdLu2H5mfV0KfuI3JY8ZsVW7n9dFH3LWg; path=/; expires=Tue, 14-May-24 17:20:48 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('set-cookie', '_cfuvid=vtZGMQgU7WZPg_mzZfKIHgU5w5ZlwsEqsr9xVfnv6Jc-1715705448302-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '883c63a3fd34656c-AMS'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
DEBUG:openai._base_client:request_id: req_3126f4dc12b63a69a5e0bf9dc8c5ab59
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x7343b8f3f9c0>, 'json_data': {'input': [[6148, 25657, 14257, 13373, 2297, 5524, 21022, 68506, 2233, 29256, 9239, 1830, 6856, 16742, 7952, 1532, 90297, 26503, 61379, 12182, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}
DEBUG:openai._base_client:Sending HTTP Request: POST https://api.openai.com/v1/embeddings
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7343a113f450>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7343b2975be0> server_hostname='api.openai.com' timeout=None
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7343b5d94290>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 14 May 2024 16:51:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-allow-origin', b'*'), (b'openai-model', b'text-embedding-ada-002'), (b'openai-organization', b'user-bhhpkljghgphbxb5smaqyp1q'), (b'openai-processing-ms', b'63'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'3000'), (b'x-ratelimit-limit-tokens', b'1000000'), (b'x-ratelimit-remaining-requests', b'2999'), (b'x-ratelimit-remaining-tokens', b'999978'), (b'x-ratelimit-reset-requests', b'20ms'), (b'x-ratelimit-reset-tokens', b'1ms'), (b'x-request-id', b'req_b44d745e31e8a663a349aaeb82373311'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'883c64a9a86f1e85-AMS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Response: POST https://api.openai.com/v1/embeddings "200 OK" Headers({'date': 'Tue, 14 May 2024 16:51:29 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'user-bhhpkljghgphbxb5smaqyp1q', 'openai-processing-ms': '63', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15724800; includeSubDomains', 'x-ratelimit-limit-requests': '3000', 'x-ratelimit-limit-tokens': '1000000', 'x-ratelimit-remaining-requests': '2999', 'x-ratelimit-remaining-tokens': '999978', 'x-ratelimit-reset-requests': '20ms', 'x-ratelimit-reset-tokens': '1ms', 'x-request-id': 'req_b44d745e31e8a663a349aaeb82373311', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '883c64a9a86f1e85-AMS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG:openai._base_client:request_id: req_b44d745e31e8a663a349aaeb82373311
DEBUG:openai._base_client:Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'role': 'system', 'content': 'Ты-консультант по ПРАВИЛАМ СТРАХОВАНИЯ.\nОтветь на вопрос клиента на основе переданного тебе документа с соответствующими правилами. \nНе придумывай ничего от себя, отвечай максимально по документу. \nНе упоминай Документ с информацией для ответа клиенту. \nКлиент ничего не должен знать про Документ с информацией для ответа клиенту\n'}, {'role': 'user', 'content': 'Ответь на вопрос клиента. Не упоминай документ с информацией для                                           ответа клиенту в ответе. Документ с информацией для ответа клиенту:                                          дельтапланы, ракеты космического назначения, космические аппараты, двигатели, агрегаты, оборудование, приборы и другие комплектующие изделия (КИ), конструкторская и техническая документация к ним, а также услуги по производству проектной, расчетной, конструкторской, эксплуатационной и иной документации, работы по изготовлению, поставке, ремонту, доработке, продлению ресурсов и сроков службы, обслуживанию авиационной техники. \n1.2.2. Аэропорт - комплекс сооружений, включающий в себя аэродром, аэровокзал, другие сооружения, предназначенный для приема и отправки воздушных судов, обслуживания воздушных перевозок и имеющий для этих целей необходимые оборудование, авиационный персонал и других работников. \n1.2.3. Аэропортовая деятельность – деятельность, осуществляемая юридическими лицами, по обеспечению взлета, посадки, руления, стоянки воздушных судов, их техническому обслуживанию и обеспечению горюче-смазочными материалами и специальными жидкостями, коммерческому обслуживанию пассажиров, багажа, почты и грузов;\nможет быть аэропортовая деятельность, а также Производственная деятельность, деятельность, связанная с разработкой, производством и реализацией авиационных товаров и услуг. \n1.2.8. Изготовитель - организация или дееспособные физические лица, зарегистрированные в качестве индивидуальных предпринимателей, производящие авиационную и космическую технику, имеющие сертифицированное (лицензированное) производство с одобренной системой качества продукции и сертификатом типа продукции, выданными им соответствующими уполномоченными на то органами государственного регулирования, осуществляющие авторский контроль и несущие имущественную ответственность за свою продукцию и услуги по закону, а также реализующие произведенную технику. \n1.2.9. Лицо, риск ответственности которого застрахован (Застрахованное лицо, Дополнительный страхователь) – лицо, на которое может быть возложена по Закону ответственность по возмещению вреда, причиненного при осуществлении застрахованной деятельности, риск ответственности которого за\nвнеаэропортовых пунктов регистрации (применительно к данной оговорке, считается, что пункт продажи билетов не является магазином). \n15. Рекламная деятельность. \n16. Промоутерская деятельность и/или спонсорство, за исключением непосредственно связанных с эксплуатацией воздушных судов или деятельности в пределах здания аэропорта. Любое изменение данного списка исключений должно быть четко прописано в договоре страхования и согласовано со Страховщиком. AVS104B \n\n\nОГОВОРКА ОБ ИСКЛЮЧЕНИИ ОТВЕТСТВЕННОСТИ ЗА СОБЫТИЯ, СВЯЗАННЫЕ С ИНФОРМАЦИОННЫМИ РИСКАМИ LIIBA AVIATION 001 Настоящий договор не покрывает следующие убытки в связи со следующим: (1) любая форма психической травмы, душевных страданий, шока или испуга, если только они не являются результатом телесного повреждения, вызванного: \nа) задержкой, отменой или непредоставлением воздушной перевозки и связанных с ней услуг; \nб) несанкционированным доступом и / или использованием конфиденциальной, частной или личной информации лица или организации; (2) имущественный\n\ufeffПРАВИЛА СТРАХОВАНИЯ ОТВЕТСТВЕННОСТИ АЭРОПОРТОВ И АВИАЦИОННЫХ ТОВАРОПРОИЗВОДИТЕЛЕЙ \n\n\n ОБЩИЕ ПОЛОЖЕНИЯ \n1.1. В соответствии с законодательством Российской Федерации и на основании настоящих Правил страховая организация АО «АльфаСтрахование» (далее по тексту – Страховщик) заключает договоры страхования гражданской ответственности перед третьими лицами владельцев и эксплуатантов аэропортов, поставщиков авиационных товаров и услуг, а также органов управления воздушным движением (далее по тексту - Страхователи). \n1.2. Основные понятия, конкретизированные определениями, изложенными ниже, трактуются в рамках настоящих Правил только согласно данным определениям: \n1.2.1. Авиационные товары и услуги - изделия авиационно-космической техники: самолеты, вертолеты, летательные аппараты специального назначения, планеры, автожиры, дельтапланы, ракеты космического назначения, космические аппараты, двигатели, агрегаты, оборудование, приборы и другие комплектующие изделия (КИ), конструкторская и техническая документация к ним,\n\nВопрос клиента: \nчто у нас с аэропортовой деятельностью?'}], 'model': 'gpt-3.5-turbo-0125', 'temperature': 0}}
DEBUG:openai._base_client:Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=5.0 socket_options=None
DEBUG:httpcore.connection:connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7343a114e990>
DEBUG:httpcore.connection:start_tls.started ssl_context=<ssl.SSLContext object at 0x7343b29759a0> server_hostname='api.openai.com' timeout=5.0
DEBUG:httpcore.connection:start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7343a114e9d0>
DEBUG:httpcore.http11:send_request_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_headers.complete
DEBUG:httpcore.http11:send_request_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:send_request_body.complete
DEBUG:httpcore.http11:receive_response_headers.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Tue, 14 May 2024 16:51:34 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'openai-organization', b'user-bhhpkljghgphbxb5smaqyp1q'), (b'openai-processing-ms', b'4249'), (b'openai-version', b'2020-10-01'), (b'strict-transport-security', b'max-age=15724800; includeSubDomains'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'60000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'57844'), (b'x-ratelimit-reset-requests', b'8.64s'), (b'x-ratelimit-reset-tokens', b'2.156s'), (b'x-request-id', b'req_cd72c7028163f015967c01fdafbd7186'), (b'CF-Cache-Status', b'DYNAMIC'), (b'Server', b'cloudflare'), (b'CF-RAY', b'883c64ae8b989fa2-AMS'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
INFO:httpx:HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
DEBUG:httpcore.http11:receive_response_body.started request=<Request [b'POST']>
DEBUG:httpcore.http11:receive_response_body.complete
DEBUG:httpcore.http11:response_closed.started
DEBUG:httpcore.http11:response_closed.complete
DEBUG:openai._base_client:HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Tue, 14 May 2024 16:51:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'openai-organization': 'user-bhhpkljghgphbxb5smaqyp1q', 'openai-processing-ms': '4249', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=15724800; includeSubDomains', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '60000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '57844', 'x-ratelimit-reset-requests': '8.64s', 'x-ratelimit-reset-tokens': '2.156s', 'x-request-id': 'req_cd72c7028163f015967c01fdafbd7186', 'cf-cache-status': 'DYNAMIC', 'server': 'cloudflare', 'cf-ray': '883c64ae8b989fa2-AMS', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
DEBUG:openai._base_client:request_id: req_cd72c7028163f015967c01fdafbd7186
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
DEBUG:httpcore.connection:close.started
DEBUG:httpcore.connection:close.complete
